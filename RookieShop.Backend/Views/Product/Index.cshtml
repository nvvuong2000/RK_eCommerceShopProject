@model RookieShop.Backend.Models.Product

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="providerID" class="control-label"></label>
                <input asp-for="providerID" class="form-control" />
                <span asp-validation-for="providerID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="producerID" class="control-label"></label>
                <input asp-for="producerID" class="form-control" />
                <span asp-validation-for="producerID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="categoryID" class="control-label"></label>
                <select asp-for="categoryID" class="form-control" asp-items="ViewBag.categoryID"></select>
            </div>
            <div class="form-group">
                <label asp-for="productName" class="control-label"></label>
                <input asp-for="productName" class="form-control" />
                <span asp-validation-for="productName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="stock" class="control-label"></label>
                <input asp-for="stock" class="form-control" />
                <span asp-validation-for="stock" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="unitPrice" class="control-label"></label>
                <input asp-for="unitPrice" class="form-control" />
                <span asp-validation-for="unitPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="description" class="control-label"></label>
                <input asp-for="description" class="form-control" />
                <span asp-validation-for="description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="url" class="control-label"></label>
                <input asp-for="url" class="form-control" />
                <span asp-validation-for="url" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="viewCount" class="control-label"></label>
                <input asp-for="viewCount" class="form-control" />
                <span asp-validation-for="viewCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="buyCount" class="control-label"></label>
                <input asp-for="buyCount" class="form-control" />
                <span asp-validation-for="buyCount" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="isNew" /> @Html.DisplayNameFor(model => model.isNew)
                </label>
            </div>
            <input type="file" name="FormFile" id="FormFile" multiple>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            @*<form enctype="multipart/form-data" method="post" asp-controller="Product" asp-action="UploadFile">
                    <dl>
                        <dt>
                            <label>Upload</label>
                        </dt>
                        <dd>


                        </dd>
                    </dl>
                    <input class="btn" type="submit" value="Upload" />
                </form>*@
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
